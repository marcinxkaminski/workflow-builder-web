{"version":3,"sources":["common/Button.jsx","data/ActionTypes.js","api/apiEndpoints.js","utils/request.js","utils/urlHelper.js","api/apiRequests.js","data/RequestStatuses.js","utils/requestDispatch.js","utils/windowHelper.js","workflow/workflowActions.js","common/Card.jsx","data/MaterialIcons.js","workflow/WorkflowElementsList.jsx","workflow/WorkflowContainer.jsx","models/WorkflowElement.js","selector/selectorHelper.js","selector/selectorActions.js","selector/SelectorCarousel.jsx","selector/SelectorContainer.jsx","serviceWorker.js","workflow/workflowReducer.js","selector/selectorReducer.js","store.js","index.jsx","app/App.jsx"],"names":["Button","props","btnProps","onClick","disabled","buttonProps","getButtonProps","shadow","customClasses","loading","icon","type","className","role","renderIcon","defaultProps","memo","_SUCCESS_SUFIX","_ERROR_SUFIX","GET_AVAILABLE_WORKFLOW_ELEMENTS","GET_AVAILABLE_WORKFLOW_ELEMENTS_SUCCESS","GET_AVAILABLE_WORKFLOW_ELEMENTS_ERROR","GET_RESULTS_FOR_DATA","GET_RESULTS_FOR_DATA_SUCCESS","GET_RESULTS_FOR_DATA_ERROR","ADD_WORKFLOW_ELEMENT","DELETE_WORKFLOW_ELEMENT","SUBMIT_WORKFLOW","SUBMIT_WORKFLOW_SUCCESS","SUBMIT_WORKFLOW_ERROR","BASE_API_URL","WORKFLOW_ELEMENTS","WORKFLOW_FILES","request","url","a","async","options","headers","method","body","fetch","mode","JSON","stringify","res","ok","json","text","buildUrl","baseUrl","endpointUrl","queryParams","URLSearchParams","toString","OPTIONS","HEADERS","get","put","post","PENDING","SUCCESS","ERROR","requestDispatch","actionType","func","params","dispatch","payload","status","data","console","error","cannotOpenUrlInNewTabWarning","warn","openUrlInNewTab","tab","window","open","focus","transformSelectedWorkflowElementsForSubmit","map","id","validateDataToGetResult","config","dataObj","parse","emptyValuesCount","Object","values","filter","i","length","keys","k","includes","err","deleteWorkflowElement","item","ActionTypes","index","processOnlineInApi","result","isValid","ApiEnpoints","onlineProcessing","submitWorkflowInApi","elements","submitWorkflow","getState","workflowState","selectedWorkflowElements","workflowId","Card","description","name","hideButtons","onAdd","onDelete","onChange","materialIcon","renderAddButton","renderDeleteButton","defaultValue","onBlur","target","value","renderConfig","items","onConfigChange","itemToDisplay","tranfsormItemToDisplay","key","Math","random","connect","bindActionCreators","dispatchDelete","dispatchSubmit","dispatchOnlineProcessing","WorkflowElementError","message","this","WorkflowElement","getAvailableWorkflowElementsFromApi","e","getAvailableWorkflowElements","addWorkflowElement","transformItemToDisplay","getNextIndex","idx","itemsCount","infinite","getPreviousIndex","SelectorCarousel","useState","activeItemIndex","setActiveItemIndex","itemsVisibleCount","visibleItemsCount","indexes","Array","fill","forEach","push","isMainCard","floor","renderCards","getVisibleItemsCount","innerWidth","selectorState","availableWorkflowElements","dispatchAdd","dispatchGet","useEffect","Boolean","location","hostname","match","initialState","workflowInitialState","selectorInitialState","createStore","combineReducers","state","concat","_","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f4b1eafe.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport { bool, string } from 'prop-types';\n\nexport const DEFAULT_ICON = 'help';\nexport const DEFAULT_SHADOW = true;\nexport const LOADING_TEXT = 'Loading...';\nexport const DEFAULT_CLASSES = 'btn btn-outline-light btn-circle';\n\nconst getButtonProps = ({ onClick, disabled }) => {\n  const buttonProps = {};\n\n  if (onClick) buttonProps.onClick = onClick;\n  if (disabled) buttonProps.disabled = disabled;\n\n  return buttonProps;\n};\n\nconst renderLoader = () => (\n  <div className=\"loader spinner-border\" role=\"status\">\n    <span className=\"sr-only\">{LOADING_TEXT}</span>\n  </div>\n);\n\nconst renderIcon = (icon) => (\n  <i className=\"material-icons\">{icon || DEFAULT_ICON}</i>\n);\n\nconst Button = (props) => {\n  const btnProps = getButtonProps(props);\n  const {\n    shadow,\n    customClasses,\n    loading,\n    icon,\n  } = props;\n\n  return (\n    <button\n      type=\"button\"\n      {...btnProps} // eslint-disable-line react/jsx-props-no-spreading\n      className={`${DEFAULT_CLASSES}${shadow ? ' shadow' : ''}${customClasses ? ` ${customClasses}` : ''}`}\n    >\n      {loading ? renderLoader() : renderIcon(icon)}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  shadow: DEFAULT_ICON,\n  customClasses: null,\n  loading: null,\n  icon: DEFAULT_ICON,\n};\n\nButton.propTypes = {\n  shadow: bool,\n  customClasses: string,\n  loading: bool,\n  icon: string,\n};\n\nexport default memo(Button);\n","/* eslint-disable no-underscore-dangle */\nexport const _SUCCESS_SUFIX = 'SUCCESS';\nexport const _ERROR_SUFIX = 'ERROR';\n\n// ACTIONS\n// app actions\nexport const GET_AVAILABLE_WORKFLOW_ELEMENTS = 'GET_AVAILABLE_WORKFLOW_ELEMENTS';\nexport const GET_AVAILABLE_WORKFLOW_ELEMENTS_SUCCESS = `GET_AVAILABLE_WORKFLOW_ELEMENTS_${_SUCCESS_SUFIX}`;\nexport const GET_AVAILABLE_WORKFLOW_ELEMENTS_ERROR = `GET_AVAILABLE_WORKFLOW_ELEMENTS_${_ERROR_SUFIX}`;\n\n// workflow actions\nexport const GET_RESULTS_FOR_DATA = 'GET_RESULTS_FOR_DATA';\nexport const GET_RESULTS_FOR_DATA_SUCCESS = `GET_RESULTS_FOR_DATA_${_SUCCESS_SUFIX}`;\nexport const GET_RESULTS_FOR_DATA_ERROR = `GET_RESULTS_FOR_DATA_${_ERROR_SUFIX}`;\n\nexport const ADD_WORKFLOW_ELEMENT = 'ADD_WORKFLOW_ELEMENT';\n\nexport const DELETE_WORKFLOW_ELEMENT = 'DELETE_WORKFLOW_ELEMENT';\n\nexport const SUBMIT_WORKFLOW = 'SUBMIT_WORKFLOW';\nexport const SUBMIT_WORKFLOW_SUCCESS = `SUBMIT_WORKFLOW_${_SUCCESS_SUFIX}`;\nexport const SUBMIT_WORKFLOW_ERROR = `SUBMIT_WORKFLOW_${_ERROR_SUFIX}`;\n","export const BASE_API_URL = 'https://workflow-builder-api.herokuapp.com/api/workflow-builder';\nexport const WORKFLOW_ELEMENTS = '/elements';\nexport const WORKFLOW_FILES = '/files';\n","export default async function request(url, options = {}, headers = {}, method = 'GET', body = {}) {\n  const res = await fetch(url, {\n    mode: 'cors',\n    ...options,\n    headers: {\n      'Content-Type': 'application/json',\n      ...headers,\n    },\n    method,\n    body: method === 'GET' || method === 'HEAD' ? null : JSON.stringify(body),\n  });\n\n  return res.ok ? res.json() : res.text();\n}\n","export function buildUrl(baseUrl, endpointUrl, queryParams = null) {\n  return `${baseUrl}${endpointUrl}${queryParams ? `?${new URLSearchParams(queryParams).toString()}` : '/'}`;\n}\n","import { BASE_API_URL } from './apiEndpoints';\nimport request from '../utils/request';\nimport { buildUrl } from '../utils/urlHelper';\n\nexport const OPTIONS = {};\nexport const HEADERS = {};\n\nexport async function get(endpointUrl, queryParams = null, options = OPTIONS, headers = HEADERS) {\n  return request(buildUrl(BASE_API_URL, endpointUrl, queryParams), options, headers, 'GET');\n}\n\nexport async function put(\n  endpointUrl, body = {}, queryParams = null, options = OPTIONS, headers = HEADERS,\n) {\n  return request(buildUrl(BASE_API_URL, endpointUrl, queryParams), options, headers, 'PUT', body);\n}\n\nexport async function post(\n  endpointUrl, body = {}, queryParams = null, options = OPTIONS, headers = HEADERS,\n) {\n  return request(buildUrl(BASE_API_URL, endpointUrl, queryParams), options, headers, 'POST', body);\n}\n","export const PENDING = 'PENDING';\nexport const SUCCESS = 'SUCCESS';\nexport const ERROR = 'ERROR';\n","import { _SUCCESS_SUFIX, _ERROR_SUFIX } from '../data/ActionTypes';\nimport { PENDING, SUCCESS, ERROR } from '../data/RequestStatuses';\n\nexport default function requestDispatch(actionType, func, params = null) {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: actionType, payload: { status: PENDING } });\n      const data = await (params ? func(params) : func());\n      dispatch({ type: `${actionType}_${_SUCCESS_SUFIX}`, payload: { status: SUCCESS, data } });\n      return data;\n    } catch (error) {\n      console.error(error);\n      dispatch({ type: `${actionType}_${_ERROR_SUFIX}`, payload: { status: ERROR, error } });\n      return null;\n    }\n  };\n}\n","export function cannotOpenUrlInNewTabWarning(url) {\n  console.warn(`Cannot open ${url} in the new tab.`);\n}\n\nexport function openUrlInNewTab(url) {\n  if (!url) { return cannotOpenUrlInNewTabWarning(url); }\n\n  const tab = window.open(url, '_blank');\n  return tab && tab.focus ? tab.focus() : cannotOpenUrlInNewTabWarning(url);\n}\n\nexport function getWindowWidth() {\n  return window.innerWidth;\n}\n","import * as ActionTypes from '../data/ActionTypes';\nimport { post, put } from '../api/apiRequests';\nimport * as ApiEnpoints from '../api/apiEndpoints';\nimport requestDispatch from '../utils/requestDispatch';\nimport { openUrlInNewTab } from '../utils/windowHelper';\nimport { buildUrl } from '../utils/urlHelper';\n\nexport function transformSelectedWorkflowElementsForSubmit(elements = []) {\n  return elements.map(({ id }) => ({ id }));\n}\n\nexport function validateDataToGetResult(data, config) {\n  try {\n    const dataObj = JSON.parse(data);\n    const emptyValuesCount = Object.values(dataObj).filter((i) => !i).length;\n    const notSameKeysCount = Object.keys(config.data).filter(\n      (k) => !Object.keys(dataObj).includes(k),\n    ).length;\n    return !notSameKeysCount && !emptyValuesCount;\n  } catch (err) {\n    console.warn(err);\n    return false;\n  }\n}\n\nexport function deleteWorkflowElement(item) {\n  return {\n    type: ActionTypes.DELETE_WORKFLOW_ELEMENT,\n    payload: item.index,\n  };\n}\n\nexport async function processOnlineInApi({ data, item }) {\n  let result = null;\n  const isValid = validateDataToGetResult(data, item.config);\n  if (isValid) {\n    result = await put(ApiEnpoints.WORKFLOW_ELEMENTS, { id: item.id, data: JSON.parse(data) });\n  }\n  return { index: item.index, result, isValid };\n}\n\nexport function onlineProcessing(item, data) {\n  return requestDispatch(ActionTypes.GET_RESULTS_FOR_DATA, processOnlineInApi, { data, item });\n}\n\nexport async function submitWorkflowInApi({ elements }) {\n  const { id } = await post(ApiEnpoints.WORKFLOW_ELEMENTS, { elements });\n  return id;\n}\n\nexport function submitWorkflow() {\n  return async (dispatch, getState) => {\n    const { selectedWorkflowElements, workflowId } = getState().workflowState;\n    let id = workflowId;\n\n    if (!id) {\n      const elements = transformSelectedWorkflowElementsForSubmit(selectedWorkflowElements);\n      id = await dispatch(requestDispatch(\n        ActionTypes.SUBMIT_WORKFLOW, submitWorkflowInApi, { elements },\n      ));\n    }\n\n    openUrlInNewTab(buildUrl(ApiEnpoints.BASE_API_URL, ApiEnpoints.WORKFLOW_FILES, { id }));\n  };\n}\n","/* eslint-disable consistent-return */\n\nimport React, { memo } from 'react';\nimport {\n  shape, func, string, bool, object, number,\n} from 'prop-types';\nimport Button from './Button';\nimport * as MaterialIcons from '../data/MaterialIcons';\n\nconst renderIndex = (index) => (\n  <div className=\"row justify-content-center\">\n    <div className=\"col text-center\">\n      <h6>{`#${index + 1}`}</h6>\n    </div>\n  </div>\n);\n\nconst renderTitle = (name) => (\n  <div className=\"row justify-content-center\">\n    <div className=\"col text-center\">\n      <h4 className=\"card-title\">{name}</h4>\n    </div>\n  </div>\n);\n\nconst renderIcon = (icon) => (\n  <div className=\"row justify-content-center my-2\">\n    <div className=\"col text-center\">\n      <div className=\"card-subtitle\">\n        <i className=\"material-icons\">{icon}</i>\n      </div>\n    </div>\n  </div>\n);\n\nconst renderDescription = (description) => (\n  <div className=\"row justify-content-center mb-3\">\n    <div className=\"col text-center\">\n      <div className=\"card-text\">\n        <small className=\"text-muted\">\n          {description}\n        </small>\n      </div>\n    </div>\n  </div>\n);\n\nconst renderAddButton = (onAdd) => (\n  <div className=\"row justify-content-center\">\n    <div className=\"col text-center\">\n      <Button\n        icon={MaterialIcons.ADD}\n        customClasses=\"btn-outline-dark mx-auto\"\n        shadow={false}\n        onClick={onAdd}\n      />\n    </div>\n  </div>\n);\n\nconst renderDeleteButton = (onDelete) => (\n  <div className=\"row justify-content-center\">\n    <div className=\"col text-center\">\n      <Button\n        icon={MaterialIcons.DELETE}\n        customClasses=\"btn-outline-dark mx-auto\"\n        shadow={false}\n        onClick={onDelete}\n      />\n    </div>\n  </div>\n);\n\nconst renderConfig = (config, onChange) => (\n  <div className=\"card-footer overflow-auto p-0 small font-weight-light\">\n    <textarea\n      className={`smallest form-control${config.isValid === false ? ' is-invalid' : ''}`}\n      defaultValue={JSON.stringify(config.data)}\n      onBlur={({ target }) => onChange(target.value)}\n    />\n    <small className=\"text-muted small\">\n      Result:\n      <br />\n      {' '}\n      {config.result ? JSON.stringify(config.result) : null}\n    </small>\n  </div>\n);\n\nconst Card = (props) => {\n  const {\n    item, customClasses, hideButtons, onAdd, onDelete, onChange,\n  } = props;\n\n  if (!item || !Object.keys(item).length) {\n    console.warn('Cannot render empty item ', item);\n    return null;\n  }\n\n  return (\n    <div className={`card element-card shadow text-center m-2 ${customClasses}`}>\n      <div className=\"card-body\">\n\n        {typeof item.index !== 'undefined' ? renderIndex(item.index) : null}\n        {item.name ? renderTitle(item.name) : null}\n        {item.materialIcon ? renderIcon(item.materialIcon) : null}\n        {item.description ? renderDescription(item.description) : null}\n\n        {onAdd && !hideButtons && !onDelete ? renderAddButton(onAdd) : null}\n        {onDelete && !hideButtons && !onAdd ? renderDeleteButton(onDelete) : null}\n\n      </div>\n      {Object.keys(item.config || {}).length && onChange\n        ? renderConfig(item.config, onChange) : null}\n    </div>\n  );\n};\n\nCard.defaultProps = {\n  item: {},\n  onAdd: null,\n  onDelete: null,\n  onChange: null,\n  hideButtons: false,\n  customClasses: '',\n};\n\nCard.propTypes = {\n  item: shape({\n    index: number,\n    name: string,\n    materialIcon: string,\n    description: string,\n    config: object,\n  }),\n  customClasses: string,\n  hideButtons: bool,\n  onAdd: func,\n  onDelete: func,\n  onChange: func,\n};\n\nexport default memo(Card);\n","export const DOWNLOAD = 'cloud_download';\nexport const ARROW_LEFT = 'keyboard_arrow_left';\nexport const ARROW_RIGHT = 'keyboard_arrow_right';\nexport const DELETE = 'clear';\nexport const ADD = 'add';\n","import React, { memo } from 'react';\nimport {\n  arrayOf, func, object, string, shape,\n} from 'prop-types';\nimport Card from '../common/Card';\n\nexport const tranfsormItemToDisplay = ({ id, name, config }, index) => ({\n  id, name, config, index,\n});\n\nconst WorkflowElementsList = (props) => {\n  const { items, onDelete, onConfigChange } = props;\n\n  return (\n    <div className=\"row w-100 mx-auto justify-content-center align-items-center my-5\">\n      {items.map((item, index) => {\n        const itemToDisplay = tranfsormItemToDisplay(item, index);\n        return (\n          <Card\n            key={item.id + Math.random()}\n            item={itemToDisplay}\n            onDelete={() => onDelete(itemToDisplay)}\n            onChange={(data) => onConfigChange(itemToDisplay, data)}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nWorkflowElementsList.propTypes = {\n  items: arrayOf(shape({\n    id: string,\n    name: string,\n    config: object,\n  })).isRequired,\n  onDelete: func.isRequired,\n  onConfigChange: func.isRequired,\n};\n\nexport default memo(WorkflowElementsList);\n","import React, { memo } from 'react';\nimport {\n  func, object, arrayOf, string, shape,\n} from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Button from '../common/Button';\nimport { DOWNLOAD } from '../data/MaterialIcons';\nimport { deleteWorkflowElement, submitWorkflow, onlineProcessing } from './workflowActions';\nimport WorkflowElementsList from './WorkflowElementsList';\nimport { PENDING } from '../data/RequestStatuses';\n\nexport const WorkflowContainer = (props) => {\n  /* istanbul ignore next */\n  const {\n    selectedWorkflowElements,\n    deleteWorkflowElement: dispatchDelete,\n    submitWorkflow: dispatchSubmit,\n    onlineProcessing: dispatchOnlineProcessing,\n    request,\n  } = props;\n\n  return (\n    <div className=\"container-fluid my-2\">\n      <WorkflowElementsList\n        items={selectedWorkflowElements}\n        onDelete={dispatchDelete}\n        onConfigChange={dispatchOnlineProcessing}\n      />\n      <div className=\"row justify-content-center my-4\">\n        <div className=\"col text-center mb-5\">\n          <Button\n            icon={DOWNLOAD}\n            loading={request.status === PENDING}\n            customClasses=\"mx-auto\"\n            onClick={dispatchSubmit}\n            shadow\n          />\n        </div>\n      </div>\n\n    </div>\n  );\n};\n\nWorkflowContainer.propTypes = {\n  selectedWorkflowElements: arrayOf(shape({\n    id: string,\n    name: string,\n    materialIcon: string,\n    description: string,\n    config: object,\n  })).isRequired,\n  deleteWorkflowElement: func.isRequired,\n  submitWorkflow: func.isRequired,\n  onlineProcessing: func.isRequired,\n  request: shape({\n    status: string,\n    error: object,\n  }).isRequired,\n};\n\nconst mapStateToProps = ({ workflowState }) => workflowState;\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  deleteWorkflowElement,\n  submitWorkflow,\n  onlineProcessing,\n}, dispatch);\n\nexport default memo(connect(mapStateToProps, mapDispatchToProps)(WorkflowContainer));\n","export function WorkflowElementError(message) {\n  this.name = 'WorkflowElementError';\n  this.message = message;\n}\n\nexport const ID_ERROR_MESSAGE = 'Invalid workflow element\\'s ID';\nexport const NAME_ERROR_MESSAGE = 'Invalid workflow element\\'s name';\n\nexport default class WorkflowElement {\n  constructor({\n    id, name, description = null, materialIcon = null, config = null,\n  }) {\n    if (!id) throw new WorkflowElementError(ID_ERROR_MESSAGE);\n    if (!name) throw new WorkflowElementError(NAME_ERROR_MESSAGE);\n\n    this.id = id;\n    this.name = name;\n    this.description = description;\n    this.materialIcon = materialIcon;\n    this.config = config;\n  }\n}\n","import { get } from '../api/apiRequests';\nimport * as ApiEnpoints from '../api/apiEndpoints';\nimport WorkflowElement from '../models/WorkflowElement';\n\nexport const getAvailableWorkflowElementsFromApi = async () => {\n  const { elements } = await get(ApiEnpoints.WORKFLOW_ELEMENTS);\n  return elements.map((e) => new WorkflowElement(e));\n};\n","import * as ActionTypes from '../data/ActionTypes';\nimport requestDispatch from '../utils/requestDispatch';\nimport { getAvailableWorkflowElementsFromApi } from './selectorHelper';\n\n\nexport function getAvailableWorkflowElements() {\n  return requestDispatch(\n    ActionTypes.GET_AVAILABLE_WORKFLOW_ELEMENTS,\n    getAvailableWorkflowElementsFromApi,\n  );\n}\n\nexport function addWorkflowElement(item) {\n  return {\n    type: ActionTypes.ADD_WORKFLOW_ELEMENT,\n    payload: { ...item },\n  };\n}\n","/* eslint-disable consistent-return */\n\nimport React, { useState, memo } from 'react';\nimport {\n  arrayOf, func, bool, number, string, shape,\n} from 'prop-types';\nimport Card from '../common/Card';\nimport Button from '../common/Button';\nimport * as MaterialIcons from '../data/MaterialIcons';\n\nexport const DEFAULT_INFINITE_STATE = true;\nexport const DEFAULT_VISIBLE_ITEMS_COUNT = 1;\nexport const DEFAULT_ITEM_INDEX = 0;\n\nexport const transformItemToDisplay = ({ name, materialIcon, description }) => ({\n  name, materialIcon, description,\n});\n\nexport const getNextIndex = (idx, itemsCount, infinite = DEFAULT_INFINITE_STATE) => {\n  if (idx < itemsCount - 1) {\n    return idx + 1;\n  } if (infinite) {\n    return (idx + 1) % itemsCount;\n  }\n  return idx;\n};\n\nexport const getPreviousIndex = (idx, itemsCount, infinite = DEFAULT_INFINITE_STATE) => {\n  if (idx > 0) {\n    return idx - 1;\n  } if (infinite) {\n    return itemsCount - 1;\n  }\n  return idx;\n};\n\nconst SelectorCarousel = (props) => {\n  const [activeItemIndex, setActiveItemIndex] = useState(0);\n  const {\n    items = [],\n    infinite = DEFAULT_INFINITE_STATE,\n    onAdd = null,\n    itemsVisibleCount = DEFAULT_VISIBLE_ITEMS_COUNT,\n  } = props;\n\n  if (!items.length || !onAdd) { return null; }\n\n  const next = async () => {\n    setActiveItemIndex(getNextIndex(activeItemIndex, items.length, infinite));\n  };\n\n  const previous = async () => {\n    setActiveItemIndex(getPreviousIndex(activeItemIndex, items.length, infinite));\n  };\n\n  const renderCards = () => {\n    const visibleItemsCount = itemsVisibleCount;\n    const itemsCount = items.length;\n\n    if (visibleItemsCount === 1 || visibleItemsCount > itemsCount) {\n      const item = items[activeItemIndex];\n      return (\n        <Card\n          item={transformItemToDisplay(item)}\n          onAdd={() => onAdd(item)}\n          customClasses=\"mx-auto\"\n        />\n      );\n    }\n    const indexes = [getPreviousIndex(activeItemIndex, itemsCount, infinite)];\n\n    new Array(visibleItemsCount - 1).fill(visibleItemsCount).forEach(() => {\n      indexes.push(getNextIndex(indexes[indexes.length - 1], itemsCount, infinite));\n    });\n\n    return indexes.map((idx, i) => {\n      const isMainCard = i === Math.floor(indexes.length / 2);\n      const item = items[idx];\n      const addItemToWorkflow = () => onAdd(item);\n      return (\n        <Card\n          key={item.id + idx + Math.random()}\n          item={transformItemToDisplay(item)}\n          onAdd={addItemToWorkflow}\n          customClasses={isMainCard ? '' : 'element-card-small'}\n          hideButtons={!isMainCard}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"container-fluid w-100\">\n      <div className=\"row justify-content-between align-items-center\">\n        <Button icon={MaterialIcons.ARROW_LEFT} onClick={previous} shadow />\n        {renderCards()}\n        <Button icon={MaterialIcons.ARROW_RIGHT} onClick={next} shadow />\n      </div>\n    </div>\n  );\n};\n\nSelectorCarousel.defaultProps = {\n  items: [],\n  infinite: DEFAULT_INFINITE_STATE,\n  itemsVisibleCount: DEFAULT_VISIBLE_ITEMS_COUNT,\n  onAdd: null,\n};\n\nSelectorCarousel.propTypes = {\n  items: arrayOf(shape({\n    id: string,\n    name: string,\n    materialIcon: string,\n    description: string,\n  })),\n  infinite: bool,\n  onAdd: func,\n  itemsVisibleCount: number,\n};\n\nexport default memo(SelectorCarousel);\n","import React, { useEffect, memo } from 'react';\nimport {\n  arrayOf, func, shape, string,\n} from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { getAvailableWorkflowElements, addWorkflowElement } from './selectorActions';\nimport SelectorCarousel from './SelectorCarousel';\nimport { getWindowWidth } from '../utils/windowHelper';\n\nexport const getVisibleItemsCount = () => (getWindowWidth() <= 768 ? 1 : 3);\n\nexport const SelectorContainer = (props) => {\n  /* istanbul ignore next */\n  const {\n    availableWorkflowElements,\n    addWorkflowElement: dispatchAdd,\n    getAvailableWorkflowElements: dispatchGet,\n  } = props;\n\n  useEffect(() => {\n    dispatchGet();\n  }, []);\n\n  return (\n    <div id=\"selector\" className=\"container-fluid w-100 shadow p-4 mb-2\">\n      <div className=\"row\">\n        <SelectorCarousel\n          itemsVisibleCount={getVisibleItemsCount()}\n          items={availableWorkflowElements}\n          onAdd={dispatchAdd}\n          infinite\n        />\n      </div>\n    </div>\n  );\n};\n\nSelectorContainer.propTypes = {\n  availableWorkflowElements: arrayOf(shape({\n    id: string,\n    name: string,\n    materialIcon: string,\n    description: string,\n  })).isRequired,\n  addWorkflowElement: func.isRequired,\n  getAvailableWorkflowElements: func.isRequired,\n};\n\nconst mapStateToProps = ({ selectorState }) => selectorState;\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  getAvailableWorkflowElements,\n  addWorkflowElement,\n}, dispatch);\n\nexport default memo(connect(mapStateToProps, mapDispatchToProps)(SelectorContainer));\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n  // [::1] is the IPv6 localhost address.\n  || window.location.hostname === '[::1]'\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  || window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n  ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n            + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import * as ActionTypes from '../data/ActionTypes';\n\nexport const initialState = {\n  request: {\n    status: null,\n    error: null,\n  },\n  selectedWorkflowElements: [],\n  workflowId: null,\n};\n\nexport default function workflowReducer(state = initialState, { type, payload }) {\n  switch (type) {\n    case ActionTypes.ADD_WORKFLOW_ELEMENT:\n      return {\n        ...state,\n        selectedWorkflowElements: state.selectedWorkflowElements.concat(payload),\n        workflowId: null,\n      };\n\n    case ActionTypes.DELETE_WORKFLOW_ELEMENT:\n      return {\n        ...state,\n        selectedWorkflowElements: state.selectedWorkflowElements.filter(\n          (_, idx) => idx !== payload,\n        ),\n        workflowId: null,\n      };\n\n    case ActionTypes.GET_RESULTS_FOR_DATA_SUCCESS:\n      return {\n        ...state,\n        request: {\n          status: payload.status,\n          error: payload.error,\n        },\n        selectedWorkflowElements: state.selectedWorkflowElements.map((e, idx) => {\n          if (idx === payload.data.index && e.config) {\n            e.config.result = payload.data.result;\n            e.config.isValid = payload.data.isValid;\n          }\n          return e;\n        }),\n      };\n\n    case ActionTypes.GET_RESULTS_FOR_DATA:\n    case ActionTypes.GET_RESULTS_FOR_DATA_ERROR:\n    case ActionTypes.SUBMIT_WORKFLOW:\n    case ActionTypes.SUBMIT_WORKFLOW_ERROR:\n      return {\n        ...state,\n        request: {\n          status: payload.status,\n          error: payload.error,\n        },\n      };\n\n    case ActionTypes.SUBMIT_WORKFLOW_SUCCESS:\n      return {\n        ...state,\n        request: {\n          status: payload.status,\n          error: payload.error,\n        },\n        workflowId: payload.data.id,\n      };\n\n    default:\n      return state;\n  }\n}\n","import * as ActionTypes from '../data/ActionTypes';\n\nexport const initialState = {\n  request: {\n    status: null,\n    error: null,\n  },\n  availableWorkflowElements: [],\n};\n\nexport default function selectorReducer(state = initialState, { type, payload }) {\n  switch (type) {\n    case ActionTypes.GET_AVAILABLE_WORKFLOW_ELEMENTS:\n      return { ...state, request: { status: payload.status, error: null } };\n\n    case ActionTypes.GET_AVAILABLE_WORKFLOW_ELEMENTS_SUCCESS:\n      return {\n        ...state,\n        request: { status: payload.status, error: null },\n        availableWorkflowElements: payload.data,\n      };\n\n    case ActionTypes.GET_AVAILABLE_WORKFLOW_ELEMENTS_ERROR:\n      return { ...state, request: { status: payload.status, error: payload.error } };\n\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport workflowState, { initialState as workflowInitialState } from './workflow/workflowReducer';\nimport selectorState, { initialState as selectorInitialState } from './selector/selectorReducer';\n\nconst initialState = {\n  workflowState: workflowInitialState,\n  selectorState: selectorInitialState,\n};\n\nexport default createStore(\n  combineReducers({ workflowState, selectorState }),\n  initialState,\n  applyMiddleware(thunk),\n);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.scss';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport Workflow from '../workflow/WorkflowContainer';\nimport Selector from '../selector/SelectorContainer';\n\nexport default () => (\n  <div>\n    <Selector />\n    <Workflow />\n  </div>\n);\n"],"sourceRoot":""}